extends layout

block content
  strong
    label(for='gameSession') Session:
    output#gameSession  #{gameSession.name}
    br
    label(for='gmName') GameMaster:
    output#gmName  #{gm.name}
    br
    output#timeout
    br
    input#gameSessionID(type='hidden', value=gameSession._id)
  #timelineTable
    table.playerView
      thead
        tr
          th.name Character/NPC/Event
          th.min Stun
          th.action Actions
          th.min Time
          th.min React
      tbody
        each item in timeline
            tr(style="background-color:"+item.color, class=(item.lastEvent?"lastEvent":""))
              td
                input(disabled=true, value=item.name)
              td.number
                input(disabled=true, value=item.stun, size=2)
              td
                - let titleString = 'Action (TU) *=Can react\n__________________\n'
                - let foundOne = false
                each actionTime in actionTimes
                  - let total = actionTime.time + item.stun + (item.deltas ? item.deltas.get(actionTime.name) : 0)
                  - let reaction = (total <= item.reactTime ? '*' : '')
                  - foundOne = (reaction?true:foundOne)
                  - titleString += '\n' + actionTime.name + ' ('+ total +') ' +  reaction
                input(disabled=true, value=(foundOne?'*':'...'), title=titleString, size=3)
              td.number
                input(disabled=true, value=item.time, size=3)
              td.lastEvent
                input(disabled=true, value=item.reactTime, size=3)
        else
          tr
            td Empty Timeline
            td ...
            td ...
            td ...
            td ...